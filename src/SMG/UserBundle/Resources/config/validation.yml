SMG\UserBundle\Entity\User:
    constraints:
        - Expression:
            expression: "this.getEmail() != '' or this.getPhoneNumber() != ''"
            message: bst.phone_and_email.missing
            groups: ['mobile_app_registration', 'backend_user_edit']
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
            fields: emailCanonical
            errorPath: email
            message: fos_user.email.already_used
            groups: ['with_email']
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
            fields: usernameCanonical
            errorPath: username
            message: fos_user.username.already_used
            groups: ['mobile_app_registration', 'with_username']
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
            fields: phoneNumber
            message: bst.phonenumber.already_used
            groups: ['with_phone', 'phone_check']

    properties:
        email:
            - Email:
                message: fos_user.email.invalid
                groups: ['with_email']
            - Length:
                min: 5
                minMessage: fos_user.email.short
                max: 255
                maxMessage: fos_user.email.long
                groups: ['with_email']
        username:
            - Length:
                min: 2
                minMessage: fos_user.username.short
                max: 255
                maxMessage: fos_user.username.long
                groups: ['mobile_app_registration', 'with_username']
            - NotBlank:
                message: fos_user.username.blank
                groups: ['mobile_app_registration', 'with_username']
        phoneNumber:
            - Length:
                min: 3
                minMessage: bst.phonenumber.short
                max: 20
                maxMessage: bst.phonenumber.long
                groups: ['with_phone']
            - Regex:
                pattern: '/\s/'
                match:   false
                message: bst.phonenumber.space
                groups: ['with_phone']
            - Regex:
                pattern: '/^\+?\d+$/'
                match:   true
                message: bst.phonenumber.format
                groups: ['with_phone', 'phone_check']
        plainPassword:
            - NotBlank:
                message: fos_user.password.blank
                groups: ['mobile_app_registration']
            - Length:
                min: 3
                max: 4096
                minMessage: fos_user.password.short
                groups: ['mobile_app_registration']
